* TODO fold не сохраняется при перемещении, для последнего элемента :bug:
* TODO ссылки по поиску [[тут строка для поиска в текущем файле][тут текст ссылки]]
** TODO придумать, хорошее сочетание клавиш для перехода по ссылкам.
** DONE сделать синтаксис ссылок
** DONE сделать подсветку ссылок
** TODO fold'ить destination ссылки
** TODO переходить по «поисковой ссылке»
Нужно переходить к заголовку с текстом из reference. Похоже без хорошего парсера уже не обойтись :(
[[https://github.com/bjonnh/PyOrgMode/issues][тут]] есть один
** TODO написать тестов на эту функциональность

* TODO понять, как можно прятать части файла, как можно менять текст
* TODO выяснить, поддерживает ли emacs списки с выравниваением
  [[sss]]
  - вот такие
    например
  - а это второй элемент,
    а это продолжение второго элемента
* TODO ctrl+z должно работать для архивации (т.е. удалять из архива)
* TODO Архивация
emacs архивирует всё следующим образом:
  - находит текущую секцию
  - приводит её к уровню 1
  - удаляет из текущего файла
  - пишет в архивный файл
** DONE Не забыть обработать случай, когда архивный файл не открывается
В этом случае мы не должны портить текущий org-file 
** TODO возможность специфицировать архивный файл
** DONE архивация, когда нет текущего имени файла
** TODO Протестировать архивацию
  - [ ] Архивация в хороший файл.
  - [ ] Архивация в плохой, несуществующий файл.
* TODO Поменять дефолтную свёртку, на что-то отличное от \
* TODO Тёплая ламповая тема
* TODO Сделать так, чтобы блоки пустых строк считались отдельным элементом дерева документа.
** DONE Понять где остаются как работают пустые строки при перемещении в emacs
У меня они двигаются вместе с нодами. В emacs какая-то упячка
* TODO Сделать одностороннюю версию fold/unfold. Повесить её на "ctrl+shift+{]/[}" 
Хочется перемещать ноды и сохранять какое-нибудь визуальное разделение. (page break?)
* TODO Написать тесты на fold/unfold
  - [ ] на обычный fold/unfold
    - [ ] от текущего заголовка до заголовка того же уровня
    - [ ] от текущего заголовка до более крупного заголовка
    - [ ] последний заголовок в файле
  - [ ] на fold/unfold all
    - [ ] когда файл начинается с заголовка сразу же
* TODO собирать TODO из кода
* TODO проверку перемещения курсора можно немного упростить, с помощью @
Нужно проверять, что курсор всегда находится около символа @
* TODO Alt+{up/down} должно перемещать курсор к заголовку
  оказывается Ctrl+{up/down} двигает view
* TODO Ctrl+Shift+K удаляет всю ноду Ctrl+Shift+X вырезает всю ноду
* TODO посмотреть какие сочетания клавиш принято использовать в sublime для того чтобы сворачивать-разворачивать
* TODO Сделать Aggenda
  - [ ] для начала было бы неплохо понять, что это такое тут [[http://orgmode.org/guide/Agenda-Views.html#Agenda-Views]] можно почитать повнимательней
  - [ ] потом было бы хорошо настроить emacs'овскую aggenda на какой-нибудь файл.
* TODO Сделать так, чтобы при первом запуске проставлялась настройка подсветки синтаксиса.
* TODO Tutorial
* TODO Сделать цитирование (чтобы можно было вставлять куски orgmode'а)
* TODO Таблицы выглядят круто!
Вот вроде [[https://github.com/vkocubinsky/SublimeTableEditor][тут]] их реализовали:
** TODO импорт таблиц

* TODO Имплементировать ссылки

* IDEAS for improvement
** javascript orgmode
I actually wish there were a html/javascript
implementation that can pull org files directly from some
online storage places (google docs or dropbox...).  It looks
to me, by reading the code, that it might be possible to
directly port the python code to javascript?

Вообще, вот тут [[https://news.ycombinator.com/item?id=11311465]] написано про некоторые фичи, которые нужны людям.

** Порядок для изучения
[[http://sachachua.com/blog/2014/01/tips-learning-org-mode-emacs/]]

** Сделать Tutorial и Tips and Tricks файлы
Вообще надо найти пару видео-туториалов и посмотреть насколько моя реализация вписывается в то чему учат товарищи.

* Ссылки
  - [[http://www.youtube.com/watch?v=fgizHHd7nOo]] -- видюшка, 
    * немного про таблицы
    * про встроенный код
    * прикольная идея -- слайд
  - Есть питоноскрипты, которые умеют парсить orgmode:
    - [[http://members.optusnet.com.au/~charles57/GTD/Orgnode.py]]
    - [[http://lists.gnu.org/archive/html/emacs-orgmode/2011-04/msg00598.html]]
    - [[https://github.com/bjonnh/PyOrgMode]]