%YAML 1.2
---
file_extensions: [org, org_archive]
first_line_match: "^#[+][A-Z]+"
scope: text.org
name: zorgmode

contexts:
    main:
        - include: expect_agenda
        - include: expect_headline
        - include: expect_list_entry
        - include: expect_link
        - include: expect_special_line
        - include: expect_src

    expect_list_entry:
        - match: '^(\s+[*]|\s*[-+]|\s*[0-9]*[.]|\s[a-zA-Z][.])\s+'
          push: list_entry
    
    list_entry:
        - meta_scope: entry.list.text.org
        - include: expect_link
        - match: '(\n)?$'
          pop: true

    expect_headline:
        - match: '^[*]{1}\s'
          push: headline1
        - match: '^[*]{2}\s'
          push: headline2
        - match: '^[*]{3}\s'
          push: headline3
        - match: '^[*]{4}\s'
          push: headline4
        - match: '^[*]{5}[*]*\s'
          push: headline5p

    headline1:
        - meta_scope: heading.1.text.org
        - include: expect_link
        - match: '(\n)?$'
          pop: true 

    headline2:
        - meta_scope: heading.2.text.org
        - include: expect_link
        - match: '(\n)?$'
          pop: true 

    headline3:
        - meta_scope: heading.3.text.org
        - include: expect_link
        - match: '(\n)?$'
          pop: true 

    headline4:
        - meta_scope: heading.4.text.org
        - include: expect_link
        - match: '(\n)?$'
          pop: true

    headline5p:
        - meta_scope: heading.5p.text.org
        - include: expect_link
        - match: '(\n)?$'
          pop: true

    expect_link:
        # Links like [[http://github.com/]]
        - match: |-
            (?x:
              \[\[
                (
                  (?:[^\[\]]|\\\[|\\\])*
                )
              \]\]
            )
          captures:
            0: link.text.org
            1: markup.underline.link.text.org

        # Links like [[http://github.com/][GitHub]]
        - match: |-
            (?x:
              \[\[
                (?: # TODO: use variable
                  (?:[^\[\]]|\\\[|\\\])*
                )
              \]\[
                (
                  (?:[^\[\]]|\\\[|\\\])*
                )
              \]\]        
            )
          captures:
            0: link.text.org
            1: markup.underline.link.text.org

        # Emplaced URLs
        # Honestly copypasted from http://urlregex.com/
        - match: '(http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+)'
          captures:
            0: link.text.org
            1: markup.underline.link.text.org

    expect_special_line:
        - match: '^#\+[A-Z_]+:.*$'
          scope: special_line.text.org

    expect_src:
        - match: '^#\+BEGIN_SRC\s+(py|python)\s*'
          scope: special_line
          embed: Packages/Python/Python.sublime-syntax
          escape : '^#\+END_SRC\s*'
          escape_captures:
            0: special_line

        - match: '^#\+BEGIN_SRC\s+(c\+\+|cpp|cxx)\s*'
          scope: special_line
          embed: Packages/C++/C++.sublime-syntax
          escape : '^#\+END_SRC\s*'
          escape_captures:
            0: special_line


    expect_agenda:
        - match: '^#\+BEGIN_AGENDA'
          scope: special_line
          push: inside_agenda

    inside_agenda:
        - match: '^\s*TODO:'
          push: inside_agenda_item
        - match: '#\+WARNING: .*$'
          scope: warning.agenda.text.org
        - include: expect_link
        - match: '^#\+END_AGENDA$'
          scope: special_line
          pop: true

    inside_agenda_item:
      - meta_scope: item.agenda.text.org
      - include: expect_link
      - match: '$'
        pop: true
